"""empty message

Revision ID: 427b4126ddeb
Revises: 3f37bf7d3993
Create Date: 2025-04-06 13:47:57.628206

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '427b4126ddeb'
down_revision = '3f37bf7d3993'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournamentName', sa.String(length=128), nullable=True),
    sa.Column('startDate', sa.String(length=64), nullable=True),
    sa.Column('endDate', sa.String(length=64), nullable=True),
    sa.Column('discipline', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_discipline'), ['discipline'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_endDate'), ['endDate'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_startDate'), ['startDate'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_tournamentName'), ['tournamentName'], unique=True)

    op.create_table('members',
    sa.Column('mcfId', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=True),
    sa.Column('mcfName', sa.String(length=128), nullable=True),
    sa.Column('gender', sa.String(length=64), nullable=True),
    sa.Column('yearOfBirth', sa.String(length=64), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('nationalRating', sa.String(length=64), nullable=True),
    sa.Column('events', sa.String(length=300), nullable=True),
    sa.Column('fideId', sa.Integer(), nullable=True),
    sa.Column('fideName', sa.String(length=80), nullable=True),
    sa.Column('fideRating', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('mcfId')
    )
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_members_events'), ['events'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_fideRating'), ['fideRating'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_gender'), ['gender'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_mcfName'), ['mcfName'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_nationalRating'), ['nationalRating'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_state'), ['state'], unique=False)
        batch_op.create_index(batch_op.f('ix_members_yearOfBirth'), ['yearOfBirth'], unique=False)

    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_index('ix_event_discipline')
        batch_op.drop_index('ix_event_endDate')
        batch_op.drop_index('ix_event_startDate')
        batch_op.drop_index('ix_event_tournamentName')

    op.drop_table('event')
    op.drop_table('event_members')
    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.drop_index('ix_member_fideRating')
        batch_op.drop_index('ix_member_gender')
        batch_op.drop_index('ix_member_mcfName')
        batch_op.drop_index('ix_member_nationalRating')
        batch_op.drop_index('ix_member_state')
        batch_op.drop_index('ix_member_yearOfBirth')

    op.drop_table('member')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('member',
    sa.Column('mcfId', sa.INTEGER(), server_default=sa.text('nextval(\'"member_mcfId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('mcfName', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('yearOfBirth', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('nationalRating', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('fideId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fideName', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('fideRating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('mcfId', name='member_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.create_index('ix_member_yearOfBirth', ['yearOfBirth'], unique=False)
        batch_op.create_index('ix_member_state', ['state'], unique=False)
        batch_op.create_index('ix_member_nationalRating', ['nationalRating'], unique=False)
        batch_op.create_index('ix_member_mcfName', ['mcfName'], unique=False)
        batch_op.create_index('ix_member_gender', ['gender'], unique=False)
        batch_op.create_index('ix_member_fideRating', ['fideRating'], unique=False)

    op.create_table('event_members',
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('member_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='event_members_event_id_fkey'),
    sa.ForeignKeyConstraint(['member_id'], ['member.mcfId'], name='event_members_member_id_fkey')
    )
    op.create_table('event',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tournamentName', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('startDate', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('endDate', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('discipline', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='event_pkey')
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.create_index('ix_event_tournamentName', ['tournamentName'], unique=True)
        batch_op.create_index('ix_event_startDate', ['startDate'], unique=False)
        batch_op.create_index('ix_event_endDate', ['endDate'], unique=False)
        batch_op.create_index('ix_event_discipline', ['discipline'], unique=False)

    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_members_yearOfBirth'))
        batch_op.drop_index(batch_op.f('ix_members_state'))
        batch_op.drop_index(batch_op.f('ix_members_nationalRating'))
        batch_op.drop_index(batch_op.f('ix_members_mcfName'))
        batch_op.drop_index(batch_op.f('ix_members_gender'))
        batch_op.drop_index(batch_op.f('ix_members_fideRating'))
        batch_op.drop_index(batch_op.f('ix_members_events'))

    op.drop_table('members')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_tournamentName'))
        batch_op.drop_index(batch_op.f('ix_events_startDate'))
        batch_op.drop_index(batch_op.f('ix_events_endDate'))
        batch_op.drop_index(batch_op.f('ix_events_discipline'))

    op.drop_table('events')
    # ### end Alembic commands ###
